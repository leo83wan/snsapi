// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using com.leo83.apis.sns.Data.v1;

namespace SNS.Migrations
{
    [DbContext(typeof(SnsContext))]
    partial class SnsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("com.leo83.apis.sns.Data.v1.Entities.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedAtClientIP");

                    b.Property<DateTime?>("DisabledAt");

                    b.Property<DateTime?>("LockedAt");

                    b.Property<string>("Password");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<string>("Username");

                    b.HasKey("AccountId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("com.leo83.apis.sns.Data.v1.Entities.AccountInfo", b =>
                {
                    b.Property<int>("AccountId");

                    b.Property<string>("AvatarUrl");

                    b.Property<DateTime?>("Birthday");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("Gender");

                    b.Property<string>("Nickname");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("AccountId");

                    b.ToTable("AccountInfos");
                });

            modelBuilder.Entity("com.leo83.apis.sns.Data.v1.Entities.AccountRole", b =>
                {
                    b.Property<int>("AccountId");

                    b.Property<string>("Role");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("AccountId", "Role");

                    b.ToTable("AccountRoles");
                });

            modelBuilder.Entity("com.leo83.apis.sns.Data.v1.Entities.AccountInfo", b =>
                {
                    b.HasOne("com.leo83.apis.sns.Data.v1.Entities.Account", "Account")
                        .WithOne("Info")
                        .HasForeignKey("com.leo83.apis.sns.Data.v1.Entities.AccountInfo", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("com.leo83.apis.sns.Data.v1.Entities.AccountRole", b =>
                {
                    b.HasOne("com.leo83.apis.sns.Data.v1.Entities.Account", "Account")
                        .WithMany("Roles")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
